{"version":3,"sources":["logo.svg","Navbar.js","List.js","List2.js","List3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","style","color","fontSize","backgroundColor","to","List","useState","newTask","setNewTask","tasks","setTasks","tasksList","map","object","index","className","paddingRight","onClick","duplicateArray","splice","deleteTask","type","placeholder","font","value","onChange","e","target","List2","App","path","component","exact","List3","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae814f32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react'; \nimport './Navbar.css';\nimport {Link} from 'react-router-dom';\nimport LandingPage from './LandingPage'; \nfunction Navbar() {\n    return (<div>\n           <p style={{color: 'white', fontSize:'50px'}}> Simple Planner </p>\n            <div style={{backgroundColor : 'white', color: '48c6ef' }}> \n            <ul>\n                <Link to='http//:RashadArbab.github.io/ToDoList/' style={{  fontSize:'30px'}}>\n                    <li >\n                        School Tasks\n                    </li>\n                </Link>\n                <Link to='http//:RashadArbab.github.io/ToDoList/WorkList'  style={{fontSize:'30px'}}>\n                    <li>\n                        Work Tasks\n                    </li>\n                </Link>\n\n                <Link to='http//:RashadArbab.github.io/ToDoList/LifeList'   style={{fontSize:'30px'}}>\n                    <li >\n                        Life Tasks\n                    </li>\n                </Link>\n\n            </ul>\n            </div>\n        </div>\n    ); \n    \n}\nexport default Navbar ; ","import React, {useState} from 'react'; \nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css' ;\nimport Navbar from './Navbar'; \n\nfunction List() {\n\n    \n\n    const[newTask, setNewTask] = useState('') ; \n    const[tasks , setTasks] = useState([]); \n\n    const tasksList = tasks.map((object, index)=>{\n\n        return <div className='row justify-content-center' >\n            \n             \n            <h2 className='col-md-6 text-left m-1' style={{paddingRight:'10px'}} >{index +1}. {object} </h2>\n            <button  className='btn btn-danger col-md-1 m-1' onClick={()=>{deleteTask(index)}}  > delete </button>\n           \n        </div>\n\n    })\n\n    function deleteTask(index){\n        \n        var duplicateArray= [...tasks]\n        duplicateArray.splice(index, 1)\n\n        setTasks(duplicateArray) \n\n    }\n\n    function addTask() {\n        setTasks([...tasks, newTask]) ; \n\n    }\n\n   \n\n    return(\n        <div > \n            <Navbar/>\n            <div className='row justify-content-center'>\n            <p style={{color: 'white', fontSize:'20px'}} > School Tasks </ p>\n            </div>\n\n            <div className='row justify-content-center'>\n            \n            <input type=\"text\" placeholder='new task' className='form-control col-md-6 row-md-1 m-1' style={{font:'message-box'}} value={newTask} onChange={(e)=>{setNewTask(e.target.value)}} /> \n            <button className='btn btn-primary col-md-1 m-1' onClick={addTask}>add task</button>\n            <br/>\n            </div>\n            <div>\n            <h1>{tasksList}</h1>\n            </div>\n        </div>\n\n    );\n\n\n\n}export default List; ","import React, {useState} from 'react'; \nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css' ;\nimport Navbar from './Navbar';\n\nfunction List2() {\n\n    const[newTask, setNewTask] = useState('') ; \n    const[tasks , setTasks] = useState([]); \n\n    const tasksList = tasks.map((object, index)=>{\n        return <div className='row justify-content-center' >\n            <h2 className='col-md-6 text-left m-1' style={{paddingRight:'10px'}} >{index +1}. {object} </h2>\n            <button  className='btn btn-danger col-md-1 m-1' onClick={()=>{deleteTask(index)}}  > delete </button>\n           \n        </div>\n\n    })\n\n    function deleteTask(index){\n        \n        var duplicateArray= [...tasks]\n        duplicateArray.splice(index, 1)\n\n        setTasks(duplicateArray) \n\n    }\n\n    function addTask() {\n        setTasks([...tasks, newTask]) ; \n\n    }\n\n   \n\n    return(\n        <div > \n            <Navbar/>\n            <div>\n            <p style={{color: 'white', fontSize:'20px'}}> Work Tasks </p>\n            </div>\n            <div className='row justify-content-center'>\n            \n            <input type=\"text\" placeholder='new task' className='form-control col-md-6 row-md-1 m-1' style={{font:'message-box'}} value={newTask} onChange={(e)=>{setNewTask(e.target.value)}} /> \n            <button className='btn btn-primary col-md-1 m-1' onClick={addTask}>add task</button>\n            <br/>\n            </div>\n            <div>\n            <h1>{tasksList}</h1>\n            </div>\n        </div>\n\n    );\n\n\n\n}export default List2; ","import React, {useState} from 'react'; \nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css' ;\n\nimport Navbar from './Navbar';\n\nfunction List() {\n\n    const[newTask, setNewTask] = useState('') ; \n    const[tasks , setTasks] = useState([]); \n\n    const tasksList = tasks.map((object, index)=>{\n        return <div className='row justify-content-center' >\n            <h2 className='col-md-6 text-left m-1' style={{paddingRight:'10px'}} >{index +1}. {object} </h2>\n            <button  className='btn btn-danger col-md-1 m-1' onClick={()=>{deleteTask(index)}}  > delete </button>\n           \n        </div>\n\n    })\n\n    function deleteTask(index){\n        \n        var duplicateArray= [...tasks]\n        duplicateArray.splice(index, 1)\n\n        setTasks(duplicateArray) \n\n    }\n\n    function addTask() {\n        setTasks([...tasks, newTask]) ; \n\n    }\n\n   \n\n    return(\n        \n        <div > \n            <Navbar/>\n            <div className='row justify-content-center'>\n            <p style={{color: 'white', fontSize:'20px'}}> Life Tasks </p>\n            \n            </div>\n            \n            <div className='row justify-content-center'>\n            \n            <input type=\"text\" placeholder='new task' className='form-control col-md-6 row-md-1 m-1' style={{font:'message-box'}} value={newTask} onChange={(e)=>{setNewTask(e.target.value)}} /> \n            <button className='btn btn-primary col-md-1 m-1' onClick={addTask}>add task</button>\n            <br/>\n            </div>\n            <div>\n            <h1>{tasksList}</h1>\n            </div>\n\n        </div>\n    \n\n    );\n\n\n\n}export default List; ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport List from './List' ; \nimport List2 from './List2';\nimport List3 from './List3';\nimport Navbar from './Navbar';\nimport {BrowserRouter, Route, Redirect,  } from 'react-router-dom'\n\nimport LandingPage from './LandingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <BrowserRouter> \n      \n\n      <Route path='/ToDoList/' component={List} exact/> \n      <Route path='/ToDoList/WorkList' component={List2} exact/> \n\n      <Route path='/ToDoList/LifeList' component={List3} exact/> \n\n       \n      </BrowserRouter>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}